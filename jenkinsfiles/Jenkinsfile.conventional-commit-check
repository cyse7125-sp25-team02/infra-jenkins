pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git remote set-url origin "https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/cyse7125-sp25-team02/infra-jenkins.git"
                            git fetch --no-tags origin master:master
                            git fetch origin pull/${CHANGE_ID}/head:PR-${CHANGE_ID}
                            git checkout PR-${CHANGE_ID}
                        '''

                        env.PR_BASE_SHA = sh(script: 'git merge-base master HEAD',returnStdout: true).trim()
                        env.PR_HEAD_SHA = sh(script: 'git rev-parse HEAD',returnStdout: true).trim()
                        
                        echo "Checking commits from ${env.PR_BASE_SHA} to ${env.PR_HEAD_SHA}"
                        sh "git log --oneline ${env.PR_BASE_SHA}..${env.PR_HEAD_SHA}"
                    }
                }
            }
        }

        stage('Lint Commits') {
            steps {
                sh "commitlint --from ${env.PR_BASE_SHA} --to ${env.PR_HEAD_SHA} --verbose --config /etc/commitlint.config.js"
            }
        }
    }

    post {
        success {
            echo "All commits follow the conventional commit format!"
        }
        failure {
            echo "Some commits do not follow the conventional commit format. Please fix them and try again."
        }
        always {
            cleanWs()
        }
    }
}
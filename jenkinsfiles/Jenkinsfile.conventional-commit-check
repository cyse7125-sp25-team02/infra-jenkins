pipeline {
    agent any

    stages {
        stage('Validate Conventional Commits') {
            steps {
                script {
                    def targetBranch = env.CHANGE_TARGET ?: 'main'
                    
                    sh 'git config --global user.email "jenkins@jkops.com"'
                    sh 'git config --global user.name "Jenkins"'
                    
                    git branch: 'master', url: 'https://github.com/cyse7125-sp25-team02/infra-jenkins', credentialsId: 'github-credentials'
                    
                    withCredentials([gitUsernamePassword(credentialsId: 'github-credentials', gitToolName: 'git')]) {
                        sh "git fetch origin +refs/heads/*:refs/remotes/origin/*"
                    }

                    def commitLogs = sh(script: "git log origin/${targetBranch}..HEAD --pretty=format:'%s%n%b'", returnStdout: true).trim()
                    
                    if (!commitLogs) {
                        echo "No new commits found. Skipping validation."
                        return
                    }

                    def conventionalPattern = /^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\([\w-]+\))?!?: .+/
                    def breakingChangePattern = /(?m)^BREAKING CHANGE: .+/

                    def invalidCommits = commitLogs.split("\n\n").findAll { commit ->
                        def (subject, body) = commit.split("\n", 2)
                        !(subject =~ conventionalPattern || body =~ breakingChangePattern)
                    }

                    if (invalidCommits) {
                        error """
                        The following commit messages do not follow the Conventional Commits specification:
                        ${invalidCommits.join('\n\n')}
                        """
                    }
                }
            }
        }
    }
}

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    sh 'git config --global user.email "jenkins@jkops.com"'
                    sh 'git config --global user.name "Jenkins"'

                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                        sh """
                            git clone https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/cyse7125-sp25-team02/infra-jenkins.git .
                            git fetch origin +refs/pull/${CHANGE_ID}/head:refs/remotes/origin/PR-${CHANGE_ID}
                            git checkout -f origin/PR-${CHANGE_ID}
                        """

                        env.PR_BASE_SHA = sh(script: 'git rev-parse origin/master', returnStdout: true).trim()
                        env.PR_HEAD_SHA = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                        
                        echo "Checking commits from ${env.PR_BASE_SHA} to ${env.PR_HEAD_SHA}"
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install -g @commitlint/config-conventional'
            }
        }

        stage('Lint Commits') {
            steps {
                sh "commitlint --from ${env.PR_BASE_SHA} --to ${env.PR_HEAD_SHA} --verbose --config /etc/commitlint.config.js"
            }
        }
    }

    post {
        success {
            echo "All commits follow the conventional commit format!"
        }
        failure {
            echo "Some commits do not follow the conventional commit format. Please fix them and try again."
        }
        always {
            cleanWs()
        }
    }
}
